#! /usr/bin/env python

''' Building URLS
If you're using another resource along with Watchman Monitoring, it can
be helpful to have a link built to be displayed on the server that will
lead you right to your other service.

This plugin sample will attempt to lay out a way snatch information
from the client to build a machine-specific URL.
'''
import os, sys
from Toolkit import check_settings
from Toolkit import write_settings
from Toolkit import readPlist

'''
Pretty simple setup here, we're going to use a known key to ask for a
machine ID of some sort from an application's configuration plist.

Settings-wise, we're holding the value of whatever we find, and will
issue a warning if it changes.
'''
base_url  = 'http://www.myawesomeservice.com/machines.php?machine_id=%s'
app_plist = '/path/to/app.plist'

settings_file = '/Library/MonitoringClient/PluginSupport/_build_url_sample_settings.plist'
base_settings = {
	'machine_id' : ''
}
settings = check_settings(base_settings, settings_file)

def main():
	e = 0
	if not os.path.exists(app_plist):
		return 25
	app_data = readPlist(app_plist)
	machine_id = app_data.get('machine_id', settings['machine_id'])

	if settings['machine_id'] and (settings['machine_id'] != machine_id):
		print('Machine ID changed from %s to %s!' % (
			settings['machine_id'],
			machine_id
		))
		e = 2

	settings['machine_id'] = machine_id
	write_settings(settings, settings_file)

	machine_url = base_url % machine_id
	print('Machine URL: %s' % machine_url)
	return e

if __name__ == '__main__':
	sys.exit( main() )
